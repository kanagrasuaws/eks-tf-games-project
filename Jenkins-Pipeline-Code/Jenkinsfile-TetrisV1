pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'nodejs'
    }
    
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
    }

    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/kanagrasuaws/eks-tf-games-project.git'
            }
        }
        
    stage('Sonarqube Analysis') {
            steps {
                dir('Tetris-V1') {
                    withSonarQubeEnv('sonar-scanner') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=TetrisVersion1.0 \
                        -Dsonar.projectKey=TetrisVersion1.0 '''
                    }
                }
            }
        } 
        
        
    stage('Quality Check') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            }
        }

    stage('OWASP Dependency-Check Scan') {
            steps {
                dir('Tetris-V1') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        
    stage('Installing Dependencies') {
            steps {
                dir('Tetris-V1') {
                    sh 'npm install'
                }
            }
        } 
        
        
    stage('Trivy File Scan') {
            steps {
                dir('Tetris-V1') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        } 
        
        
    stage("Docker Image Build") {
            steps {
                script {
                    dir('Tetris-V1') {
                        withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {   
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t tetrisv1 .'
                        }
                    }
                }
            }
        } 
        
        
    stage("Docker Image Pushing") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {   
                        sh 'docker tag tetrisv1 kanagarasu/tetrisv1:${BUILD_NUMBER}'
                        sh 'docker push kanagarasu/tetrisv1:${BUILD_NUMBER}'
                    }
                }
            }
        } 
        
    stage("TRIVY Image Scan") {
            steps {
                sh 'trivy image kanagarasu/tetrisv1:${BUILD_NUMBER} > trivyimage.txt' 
            }
        }
        
    stage('Trigger Downstream Pipeline') {
            steps {
                build job: 'eks-project'
            }
        }
    
        
    }
}

        
        
